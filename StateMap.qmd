---
title: "StateMap"
format: html
editor: visual
---

```{r}
wd = "/Users/Hayden/Maps/"
library(dplyr)
library(readxl)
library(usmap)
library(sf)
```

#This code expands on the usmap package's state_map to create the one I use for mapping
```{r}
state_map = us_map("states") |>
  rename(geometry = geom,
         name = full) |>
  mutate(centroid = st_centroid(geometry),
         x = st_coordinates(centroid)[, 1], # Longitude
         y = st_coordinates(centroid)[, 2] # Latitude
         )

adjustments <- tibble::tibble(
  abbr = c("CA", "NJ", "MI", "MD", "LA", "FL", "HI", "ID", "WV", "ME"), #adjust centroids
  x_adj = c(-40000, 10000,80000, -25000, -50000,80000, 80000, 0, -20000, 20000),
  y_adj = c(0, 0,-100000, 35000, -40000,0,-70000, -50000, 0, 0)
)

state_map <- state_map |>
  left_join(adjustments, by = "abbr") |>
  mutate(
    x = coalesce(x + x_adj, x),  # Apply adjustment if exists, otherwise keep original
    y = coalesce(y + y_adj, y)
  ) |>
  select(-x_adj, -y_adj)

#TO DO:
#add yearly populations
#add areas
```

#Save state_map
```{r}
#st_write(state_map, "state_map/state_map.shp", delete_dsn = TRUE)
```

```{r}
data = state_map |>
  st_drop_geometry() |>
  mutate(Value = runif(n = nrow(state_map))) |>
  select(Value, fips)

map(data = data,
  map = state_map,
  state_map = state_map,
  graphicspath = wd,
  bubbles = F,
  title = "State Map Test",
  source = ""
)
```

